<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
    <flow name="mod45-++--" doc:id="56ce547b-81f1-4e19-9654-8266592c7bae" >
        <ee:transform doc:name="Transform Message" doc:id="4ea09d61-1383-489a-b09f-b6eb3a637c3b" >
            <ee:message >
                <ee:set-payload ><![CDATA[%dw 2.0
output application/dw

var fs2rm = ["airline", "price", "planeType"]
---
//payload -- fs2rm

[1,4,2,6,1,4,5,1] << 1000]]></ee:set-payload>
            </ee:message>
        </ee:transform>
    </flow>
    <flow name="mod45-zip-unzip-flatten" doc:id="ad65ed0d-90b6-4a3b-825d-7af73a055658" >
        <ee:transform doc:name="Transform Message" doc:id="a49a97ba-cf4b-4d45-add6-580c1b6328cc" >
            <ee:message >
                <ee:set-payload ><![CDATA[%dw 2.0
output application/dw
var a = [1,2,3,4]
var b = ["a","b","c"]
---
//flatten(unzip(a zip b))
flatten([0,1,[2,[3,[4,[5]]]]])]]></ee:set-payload>
            </ee:message>
        </ee:transform>
    </flow>
    <flow name="mod45-objects" doc:id="3ca1ffb2-0b4f-49f5-bb71-3216b7162a4b" >
        <ee:transform doc:name="Transform Message" doc:id="6847d1b1-35a8-49d8-be7a-fc267b4e7737" >
            <ee:message >
                <ee:set-payload ><![CDATA[%dw 2.0
output application/dw
import dw::core::Objects
---
//{
//	keys: Objects::keySet(payload) map typeOf($),
//	names: Objects::nameSet(payload) map typeOf($),
//	values: Objects::valueSet(payload)
//}

//payload Objects::mergeWith {
//	airline: "Unite"
//}

//only available in latest mule runtime
{
	keys: keysOf(payload),
	values: valuesOf(payload),
	names: namesOf(payload)
}]]></ee:set-payload>
            </ee:message>
        </ee:transform>
    </flow>
    <flow name="mod45-arrays" doc:id="0fa4dc46-6eb6-4844-9587-22d77a0bc931" >
        <ee:transform doc:name="Transform Message" doc:id="b6b59dce-ee6b-40e4-9010-8703221cade0" >
            <ee:message >
                <ee:set-payload ><![CDATA[%dw 2.0
output application/dw
import dw::core::Arrays

//var compoundJoin = (l: Array,r: Array,lc: Array,rc: Array) ->
//	Arrays::join(
//		l, 
//		r, 
//		(li) -> (
//			keysOf(li) reduce (li[$] ++ "|" ++ $$)
//		), 
//		(ri) -> (
//			keysOf(ri) reduce (ri[$] ++ "|" ++ $$)
//		)
//	)
var keys = ["airlineName", "code"]
---
{
	areAllDeltaFlights: payload Arrays::every ($.airlineName == "Delta"),
	numberOfEmptySeats: payload Arrays::sumBy ($.emptySeats as Number),
	flightsToAtlanta: payload Arrays::some ($.destination == "ATL"),
	flightsWithNoAvailability: payload Arrays::countBy ($.emptySeats ~= 0),
	keys: keysOf(payload[0])
}]]></ee:set-payload>
            </ee:message>
        </ee:transform>
    </flow>
</mule>
